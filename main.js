/*
THIS IS A GENERATED/BUNDLED FILE BY ROLLUP
if you want to view the source visit the plugins github repository
*/

'use strict';

var obsidian = require('obsidian');

//string to array of classes
const arrayToClasses = (input) => {
    input = input.trim();
    if (input[0] != "[" || input[input.length - 1] != "]")
        return [];
    return input
        .substring(1, input.length - 1)
        .trim()
        .split(/\s*,\s*/);
};
class EventFactory {
    constructor(root, sourcePath) {
        this.root = root;
        this.sourcePath = sourcePath;
    }
    //remove first child's top margin and last child's bottom margin
    regulate(component) {
        let aux = component.lastChild;
        aux.style.marginBottom = "0";
        aux = component.firstChild;
        aux.style.marginTop = "0";
    }
    create(time, title, description) {
        let timeContainerEl = this.root.createDiv({ cls: "time-container" }), timeEl = timeContainerEl.createDiv({ cls: "time" }), infoEl = this.root.createDiv({ cls: "info" }), 
        //			titleEl = infoEl.createDiv({ cls: "title" }),
        descriptionEl = infoEl.createDiv({ cls: "description" });
        obsidian.MarkdownRenderer.renderMarkdown(time, timeEl, this.sourcePath, null);
        //		MarkdownRenderer.renderMarkdown(title, titleEl, this.sourcePath, null);
        obsidian.MarkdownRenderer.renderMarkdown(description, descriptionEl, this.sourcePath, null);
        this.regulate(descriptionEl);
        this.regulate(timeEl);
        //		this.regulate(titleEl);
    }
}
const codeBlockHandler = (source, el, ctx) => {
    //Initial State
    el.addClass("timeline");
    let ef = new EventFactory(el, ctx.sourcePath);
    //source to events
    const events = source
        .split(/^\s*\+ ?/gm)
        .map((event) => (event.trim().length != 0 ? event : "\u200B"));
    for (let elClass of arrayToClasses(events[0]))
        el.addClass(elClass);
    const incompleteCounter = (events.length - 1) % 3;
    const completeCounter = events.length - 1 - incompleteCounter;
    //build it
    el.createDiv({
        cls: "main-line",
        attr: {
            style: `grid-row-end: ${completeCounter / 3 + 1 + (incompleteCounter != 0 ? 1 : 0)}`,
        },
    });
    for (let i = 1; i < completeCounter; i += 3) {
        ef.create(events[i], events[i + 1], events[i + 2]);
    }
    switch (incompleteCounter) {
        case 1:
            ef.create(events[completeCounter + 1], "", "");
            return;
        case 2:
            ef.create(events[completeCounter + 1], events[completeCounter + 2], "");
            return;
        default:
            return;
    }
};
class MyPlugin extends obsidian.Plugin {
    onload() {
        this.registerMarkdownCodeBlockProcessor("timeline", codeBlockHandler);
    }
}

module.exports = MyPlugin;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsInNvdXJjZXMiOlsibWFpbi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQbHVnaW4sIE1hcmtkb3duUG9zdFByb2Nlc3NvckNvbnRleHQsIE1hcmtkb3duUmVuZGVyZXJ9IGZyb20gXCJvYnNpZGlhblwiO1xuXG4vL3N0cmluZyB0byBhcnJheSBvZiBjbGFzc2VzXG5jb25zdCBhcnJheVRvQ2xhc3NlcyA9IChpbnB1dDogc3RyaW5nKTogc3RyaW5nW10gPT4ge1xuXHRpbnB1dCA9IGlucHV0LnRyaW0oKTtcblx0aWYgKGlucHV0WzBdICE9IFwiW1wiIHx8IGlucHV0W2lucHV0Lmxlbmd0aCAtIDFdICE9IFwiXVwiKSByZXR1cm4gW107XG5cblx0cmV0dXJuIGlucHV0XG5cdFx0LnN1YnN0cmluZygxLCBpbnB1dC5sZW5ndGggLSAxKVxuXHRcdC50cmltKClcblx0XHQuc3BsaXQoL1xccyosXFxzKi8pO1xufTtcblxuY2xhc3MgRXZlbnRGYWN0b3J5IHtcblx0cm9vdDogSFRNTEVsZW1lbnQ7XG5cdHNvdXJjZVBhdGg6IHN0cmluZztcblxuXHRjb25zdHJ1Y3Rvcihyb290OiBIVE1MRWxlbWVudCwgc291cmNlUGF0aDogc3RyaW5nKSB7XG5cdFx0dGhpcy5yb290ID0gcm9vdDtcblx0XHR0aGlzLnNvdXJjZVBhdGggPSBzb3VyY2VQYXRoO1xuXHR9XG5cblx0Ly9yZW1vdmUgZmlyc3QgY2hpbGQncyB0b3AgbWFyZ2luIGFuZCBsYXN0IGNoaWxkJ3MgYm90dG9tIG1hcmdpblxuXHRyZWd1bGF0ZShjb21wb25lbnQ6IEhUTUxEaXZFbGVtZW50KSB7XG5cdFx0bGV0IGF1eCA9IGNvbXBvbmVudC5sYXN0Q2hpbGQgYXMgSFRNTEVsZW1lbnQ7XG5cdFx0YXV4LnN0eWxlLm1hcmdpbkJvdHRvbSA9IFwiMFwiO1xuXHRcdGF1eCA9IGNvbXBvbmVudC5maXJzdENoaWxkIGFzIEhUTUxFbGVtZW50O1xuXHRcdGF1eC5zdHlsZS5tYXJnaW5Ub3AgPSBcIjBcIjtcblx0fVxuXG5cdGNyZWF0ZSh0aW1lOiBzdHJpbmcsIHRpdGxlOiBzdHJpbmcsIGRlc2NyaXB0aW9uOiBzdHJpbmcpIHtcblx0XHRsZXQgdGltZUNvbnRhaW5lckVsID0gdGhpcy5yb290LmNyZWF0ZURpdih7IGNsczogXCJ0aW1lLWNvbnRhaW5lclwiIH0pLFxuXHRcdFx0dGltZUVsID0gdGltZUNvbnRhaW5lckVsLmNyZWF0ZURpdih7IGNsczogXCJ0aW1lXCIgfSksXG5cdFx0XHRpbmZvRWwgPSB0aGlzLnJvb3QuY3JlYXRlRGl2KHsgY2xzOiBcImluZm9cIiB9KSxcbi8vXHRcdFx0dGl0bGVFbCA9IGluZm9FbC5jcmVhdGVEaXYoeyBjbHM6IFwidGl0bGVcIiB9KSxcblx0XHRcdGRlc2NyaXB0aW9uRWwgPSBpbmZvRWwuY3JlYXRlRGl2KHsgY2xzOiBcImRlc2NyaXB0aW9uXCIgfSk7XG5cblx0XHRNYXJrZG93blJlbmRlcmVyLnJlbmRlck1hcmtkb3duKHRpbWUsIHRpbWVFbCwgdGhpcy5zb3VyY2VQYXRoLCBudWxsKTtcbi8vXHRcdE1hcmtkb3duUmVuZGVyZXIucmVuZGVyTWFya2Rvd24odGl0bGUsIHRpdGxlRWwsIHRoaXMuc291cmNlUGF0aCwgbnVsbCk7XG5cdFx0TWFya2Rvd25SZW5kZXJlci5yZW5kZXJNYXJrZG93bihcblx0XHRcdGRlc2NyaXB0aW9uLFxuXHRcdFx0ZGVzY3JpcHRpb25FbCxcblx0XHRcdHRoaXMuc291cmNlUGF0aCxcblx0XHRcdG51bGxcblx0XHQpO1xuXG5cdFx0dGhpcy5yZWd1bGF0ZShkZXNjcmlwdGlvbkVsKTtcblx0XHR0aGlzLnJlZ3VsYXRlKHRpbWVFbCk7XG4vL1x0XHR0aGlzLnJlZ3VsYXRlKHRpdGxlRWwpO1xuXHR9XG59XG5cbmNvbnN0IGNvZGVCbG9ja0hhbmRsZXIgPSAoXG5cdHNvdXJjZTogc3RyaW5nLFxuXHRlbDogSFRNTEVsZW1lbnQsXG5cdGN0eDogTWFya2Rvd25Qb3N0UHJvY2Vzc29yQ29udGV4dFxuKSA9PiB7XG5cdC8vSW5pdGlhbCBTdGF0ZVxuXHRlbC5hZGRDbGFzcyhcInRpbWVsaW5lXCIpO1xuXHRsZXQgZWYgPSBuZXcgRXZlbnRGYWN0b3J5KGVsLCBjdHguc291cmNlUGF0aCk7XG5cblx0Ly9zb3VyY2UgdG8gZXZlbnRzXG5cdGNvbnN0IGV2ZW50czogc3RyaW5nW10gPSBzb3VyY2Vcblx0XHQuc3BsaXQoL15cXHMqXFwrID8vZ20pXG5cdFx0Lm1hcCgoZXZlbnQpID0+IChldmVudC50cmltKCkubGVuZ3RoICE9IDAgPyBldmVudCA6IFwiXFx1MjAwQlwiKSk7XG5cdGZvciAobGV0IGVsQ2xhc3Mgb2YgYXJyYXlUb0NsYXNzZXMoZXZlbnRzWzBdKSkgZWwuYWRkQ2xhc3MoZWxDbGFzcyk7XG5cblx0Y29uc3QgaW5jb21wbGV0ZUNvdW50ZXIgPSAoZXZlbnRzLmxlbmd0aCAtIDEpICUgMztcblx0Y29uc3QgY29tcGxldGVDb3VudGVyID0gZXZlbnRzLmxlbmd0aCAtIDEgLSBpbmNvbXBsZXRlQ291bnRlcjtcblxuXHQvL2J1aWxkIGl0XG5cdGVsLmNyZWF0ZURpdih7XG5cdFx0Y2xzOiBcIm1haW4tbGluZVwiLFxuXHRcdGF0dHI6IHtcblx0XHRcdHN0eWxlOiBgZ3JpZC1yb3ctZW5kOiAke1xuXHRcdFx0XHRjb21wbGV0ZUNvdW50ZXIgLyAzICsgMSArIChpbmNvbXBsZXRlQ291bnRlciAhPSAwID8gMSA6IDApXG5cdFx0XHR9YCxcblx0XHR9LFxuXHR9KTtcblx0Zm9yIChsZXQgaSA9IDE7IGkgPCBjb21wbGV0ZUNvdW50ZXI7IGkgKz0gMykge1xuXHRcdGVmLmNyZWF0ZShldmVudHNbaV0sIGV2ZW50c1tpICsgMV0sIGV2ZW50c1tpICsgMl0pO1xuXHR9XG5cblx0c3dpdGNoIChpbmNvbXBsZXRlQ291bnRlcikge1xuXHRcdGNhc2UgMTpcblx0XHRcdGVmLmNyZWF0ZShldmVudHNbY29tcGxldGVDb3VudGVyICsgMV0sIFwiXCIsIFwiXCIpO1xuXHRcdFx0cmV0dXJuO1xuXHRcdGNhc2UgMjpcblx0XHRcdGVmLmNyZWF0ZShldmVudHNbY29tcGxldGVDb3VudGVyICsgMV0sIGV2ZW50c1tjb21wbGV0ZUNvdW50ZXIgKyAyXSwgXCJcIik7XG5cdFx0XHRyZXR1cm47XG5cdFx0ZGVmYXVsdDpcblx0XHRcdHJldHVybjtcblx0fVxufTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTXlQbHVnaW4gZXh0ZW5kcyBQbHVnaW4ge1xuXHRvbmxvYWQoKSB7XG5cdFx0dGhpcy5yZWdpc3Rlck1hcmtkb3duQ29kZUJsb2NrUHJvY2Vzc29yKFwidGltZWxpbmVcIiwgY29kZUJsb2NrSGFuZGxlcik7XG5cdH1cbn1cbiJdLCJuYW1lcyI6WyJNYXJrZG93blJlbmRlcmVyIiwiUGx1Z2luIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFFQTtBQUNBLE1BQU0sY0FBYyxHQUFHLENBQUMsS0FBYTtJQUNwQyxLQUFLLEdBQUcsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ3JCLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsSUFBSSxLQUFLLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsSUFBSSxHQUFHO1FBQUUsT0FBTyxFQUFFLENBQUM7SUFFakUsT0FBTyxLQUFLO1NBQ1YsU0FBUyxDQUFDLENBQUMsRUFBRSxLQUFLLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQztTQUM5QixJQUFJLEVBQUU7U0FDTixLQUFLLENBQUMsU0FBUyxDQUFDLENBQUM7QUFDcEIsQ0FBQyxDQUFDO0FBRUYsTUFBTSxZQUFZO0lBSWpCLFlBQVksSUFBaUIsRUFBRSxVQUFrQjtRQUNoRCxJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUNqQixJQUFJLENBQUMsVUFBVSxHQUFHLFVBQVUsQ0FBQztLQUM3Qjs7SUFHRCxRQUFRLENBQUMsU0FBeUI7UUFDakMsSUFBSSxHQUFHLEdBQUcsU0FBUyxDQUFDLFNBQXdCLENBQUM7UUFDN0MsR0FBRyxDQUFDLEtBQUssQ0FBQyxZQUFZLEdBQUcsR0FBRyxDQUFDO1FBQzdC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
